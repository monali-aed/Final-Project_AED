/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Pharmacist;

import business.Enterprise.Enterprise;
import business.Inventory.Medicine;
import business.Inventory.MedicineDirectory;
import business.Network.Network;
import business.Organization.PharmacistOrganization;
import business.UserAccount.UserAccount;
import business.WorkQueue.MedicineSupplierWorkRequest;
import business.WorkQueue.MedicineWorkRequest;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author monal
 */
public class PharmacistWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PharamasistWorkAreaJPanel
     */
   JPanel container;
    private PharmacistOrganization pharmacistOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    MedicineDirectory medicineDirectory;
    Network network;
    
    public PharmacistWorkAreaJPanel(JPanel container, UserAccount account, PharmacistOrganization pharmacistOrganization, Enterprise enterprise, Network network) {
        initComponents();
        this.container=container;
        this.enterprise=enterprise;
        this.userAccount=account;
        this.network = network;
        medicineDirectory= account.getMedicineDirectory();
        this.pharmacistOrganization = pharmacistOrganization;
        populateMedicineTable();
        populateSupplierRequestTable();
    }
    
    private void populateMedicineTable()
    {
        DefaultTableModel model = (DefaultTableModel)tblPatient.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : pharmacistOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getPatientName();
            row[3] = request.getStatus();
            
            model.addRow(row);
        }
        
    }
    
    private void populateSupplierRequestTable()
    {
       DefaultTableModel model = (DefaultTableModel)tblSupplierMedicineRequests.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if(request.getRequestType().contains("Supplier"))
            {
            Object[] row = new Object[5];
            row[0] = request.getRequestDate();
            row[1] = request.getSender();;
            row[2] = request;
            row[3] = request.getReceiver();
            String result = ((MedicineSupplierWorkRequest) request).getStatus();
            row[4] = result == null ? "Waiting" : result;
            
            model.addRow(row);
        }
    }
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnCheckInventory = new javax.swing.JButton();
        rightPanel = new javax.swing.JPanel();
        homeJPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        btnProcess = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSupplierMedicineRequests = new javax.swing.JTable();
        btnAccept = new javax.swing.JButton();
        lblBanner = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        splitPane.setDividerLocation(220);

        leftPanel.setBackground(new java.awt.Color(0, 153, 204));

        btnHome.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnCheckInventory.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnCheckInventory.setText("Check Inventory");
        btnCheckInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckInventoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCheckInventory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(btnHome)
                .addGap(18, 18, 18)
                .addComponent(btnCheckInventory)
                .addContainerGap(462, Short.MAX_VALUE))
        );

        splitPane.setLeftComponent(leftPanel);

        rightPanel.setLayout(new java.awt.CardLayout());

        homeJPanel.setBackground(new java.awt.Color(0, 153, 204));
        homeJPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                homeJPanelComponentShown(evt);
            }
        });

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicines", "Sender", "Patient Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatient);
        if (tblPatient.getColumnModel().getColumnCount() > 0) {
            tblPatient.getColumnModel().getColumn(0).setResizable(false);
            tblPatient.getColumnModel().getColumn(1).setResizable(false);
        }

        btnProcess.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        tblSupplierMedicineRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Date", "Sender", "Medicines", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSupplierMedicineRequests);
        if (tblSupplierMedicineRequests.getColumnModel().getColumnCount() > 0) {
            tblSupplierMedicineRequests.getColumnModel().getColumn(0).setResizable(false);
            tblSupplierMedicineRequests.getColumnModel().getColumn(1).setResizable(false);
            tblSupplierMedicineRequests.getColumnModel().getColumn(3).setResizable(false);
            tblSupplierMedicineRequests.getColumnModel().getColumn(4).setResizable(false);
        }

        btnAccept.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        lblBanner.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        lblBanner.setText("Pharmacist Work Area");

        javax.swing.GroupLayout homeJPanelLayout = new javax.swing.GroupLayout(homeJPanel);
        homeJPanel.setLayout(homeJPanelLayout);
        homeJPanelLayout.setHorizontalGroup(
            homeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(homeJPanelLayout.createSequentialGroup()
                        .addGroup(homeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAccept)
                            .addComponent(btnProcess)
                            .addComponent(lblBanner))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        homeJPanelLayout.setVerticalGroup(
            homeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBanner)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnProcess)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAccept)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        rightPanel.add(homeJPanel, "card2");

        splitPane.setRightComponent(rightPanel);

        add(splitPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

     
    
    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
       
        int selectedRow = tblPatient.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
        MedicineWorkRequest request = (MedicineWorkRequest)tblPatient.getValueAt(selectedRow, 0);
     
        request.setStatus("Processing");
        SupplyMedicine supplyMedicine = new SupplyMedicine(rightPanel, userAccount, medicineDirectory, request);
        rightPanel.add("SupplyMedicine", supplyMedicine );
        CardLayout layout= (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
        }
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        rightPanel.removeAll();
        rightPanel.add(homeJPanel);
        populateMedicineTable();
        populateSupplierRequestTable();
       
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnCheckInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckInventoryActionPerformed
        CheckInventory checkInventory= new CheckInventory(rightPanel, userAccount, medicineDirectory, network);
        rightPanel.add("CheckInventory", checkInventory );
        CardLayout layout= (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
    }//GEN-LAST:event_btnCheckInventoryActionPerformed

    private void homeJPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_homeJPanelComponentShown
        // TODO add your handling code here:
        populateMedicineTable();
        populateSupplierRequestTable();
    }//GEN-LAST:event_homeJPanelComponentShown

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblSupplierMedicineRequests.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
        MedicineSupplierWorkRequest request = (MedicineSupplierWorkRequest)tblSupplierMedicineRequests.getValueAt(selectedRow, 2);
        if(request.getStatus().equalsIgnoreCase("Procesed"))
        {
        for(Medicine medicine : userAccount.getMedicineDirectory().getMedicineList())
        {
            if(request.getMessage().contains(medicine.getMedicineName()))
            {
                medicine.setQuantity( medicine.getQuantity() + 50);
            }
        }
        request.setStatus("Completed");
        populateSupplierRequestTable();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Sorry this request is not processed yet!!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        }
        
    
    }//GEN-LAST:event_btnAcceptActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnCheckInventory;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnProcess;
    private javax.swing.JPanel homeJPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBanner;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JTable tblPatient;
    private javax.swing.JTable tblSupplierMedicineRequests;
    // End of variables declaration//GEN-END:variables
}
