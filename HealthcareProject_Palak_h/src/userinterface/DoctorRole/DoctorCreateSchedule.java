/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Schedule;
import Business.WorkQueue.ScheduleDirectory;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/**
 *
 * @author sylvesternoronha
 */
public class DoctorCreateSchedule extends javax.swing.JFrame {

    /**
     * Creates new form DoctorCreateSchedule
     */
    JPanel doctorContainerRightJPanel;
   // DoctorRole doctor;
    UserAccount userAccount;
    ScheduleDirectory scheduleDirectory;
    
    DoctorCreateSchedule(JPanel container, UserAccount userAccount, ScheduleDirectory scheduleDirectory) {
        initComponents();
        this.doctorContainerRightJPanel=container;
        this.userAccount = userAccount;
        this.scheduleDirectory=scheduleDirectory;
        DateFormat df = new SimpleDateFormat("dd/MM/yy");
        Date date = new Date();
        
        dateField.setDate(date);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        banner = new javax.swing.JLabel();
        locationLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        hoursLabel = new javax.swing.JLabel();
        txtTime = new javax.swing.JComboBox();
        txtHours = new javax.swing.JTextField();
        txtLocation = new javax.swing.JTextField();
        btnCreateSchedule = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        dateField = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        banner.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        banner.setText("Create Schedule");

        locationLabel.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        locationLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        locationLabel.setText("Location:");

        dateLabel.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dateLabel.setText("Date:");

        timeLabel.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        timeLabel.setText("Time:");

        hoursLabel.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        hoursLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hoursLabel.setText("Hours:");

        txtTime.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "9:00AM", "10:00AM", "11:00AM", "12:00PM", "1:00PM", "2:00PM", "3:00PM", "4:00PM", "5:00PM" }));

        txtHours.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        txtLocation.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        btnCreateSchedule.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnCreateSchedule.setText("Create Schedule");
        btnCreateSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateScheduleActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCreateSchedule))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(banner)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLayout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(hoursLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTime, 0, 199, Short.MAX_VALUE)
                                    .addComponent(txtHours)
                                    .addComponent(dateField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(locationLabel)
                                .addGap(18, 18, 18)
                                .addComponent(txtLocation)))))
                .addGap(384, 384, 384))
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btnBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(banner)
                .addGap(59, 59, 59)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateLabel)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeLabel)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoursLabel))
                .addGap(26, 26, 26)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationLabel))
                .addGap(49, 49, 49)
                .addComponent(btnCreateSchedule)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(99, 99, 99))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateScheduleActionPerformed
        // TODO add your handling code here:

        DateFormat df = new SimpleDateFormat("dd/MM/yy");
        Date date = new Date();

        Date localDate;
        if(!(dateField.getDate().toString().isEmpty()))
        {localDate=dateField.getDate();

            if(localDate.compareTo(date) ==-1)
            JOptionPane.showMessageDialog(null, "PLEASE CHOOSE FUTURE DATES!","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            else if(!txtHours.getText().matches("[1-9]"))
            JOptionPane.showMessageDialog(null, "PLEASE ENTTER HOURS BETWEEN 1 TO 9","WARNING",JOptionPane.WARNING_MESSAGE);
            else if(!txtLocation.getText().matches("[[A-Za-z]*[0-9]*[A-Za-z]]*"))
            JOptionPane.showMessageDialog(null, "PLEASE ENTTER AALPHABETS AND DIGITS ONLY","WARNING",JOptionPane.WARNING_MESSAGE);
            else if(txtHours.getText().isEmpty() || txtLocation.getText().isEmpty() )
            JOptionPane.showMessageDialog(null, "PLEASE ENTTER Values in  all fields","WARNING",JOptionPane.WARNING_MESSAGE);
            else{
                Schedule schedule = userAccount.getScheduleDirectory().add();
                String timeabb=(String) txtTime.getSelectedItem();
                timeabb=timeabb.substring(0, timeabb.length() - 5);

                schedule.setDate(dateField.getDate());
                schedule.setAvailHours((int) Float.parseFloat(txtHours.getText()));
                schedule.setLocation(txtLocation.getText());
                schedule.setTime(timeabb);

                txtHours.setText(null);
                txtLocation.setText(null);
                txtTime.setSelectedIndex(0);
                JOptionPane.showMessageDialog(null, "Schedule Created","Success",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else
        JOptionPane.showMessageDialog(null, "PLEASE CHOOSE a DATE","WARNING",JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnCreateScheduleActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        doctorContainerRightJPanel.remove(this);
        CardLayout layout = (CardLayout) doctorContainerRightJPanel.getLayout();
        layout.previous(doctorContainerRightJPanel);

    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel banner;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateSchedule;
    private com.toedter.calendar.JDateChooser dateField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel hoursLabel;
    private javax.swing.JPanel jPanel;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JTextField txtHours;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JComboBox txtTime;
    // End of variables declaration//GEN-END:variables
}
